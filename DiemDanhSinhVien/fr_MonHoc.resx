<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tSbtnMoi.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEdSURBVDhPpVNJTsQwEPQFnhHbcIGBG99kCSRpNDwAJI5c
        GV4xw4EzD8AL0iAWBVc7GTGkURCUVJHjrmq7Ox31HVsU9y2F0pBbWIrPYF6HErFONsTkut00FBtL7iOZ
        WpGVe9dNqKDtbBlsrv2daBJoyM/WkuSTh8KdaaYUSyWdsZlrTleTRFeLJVOKwbNdxz1lm3AqChJvHl6Y
        Ugw0FI6VreO9FATHEujKzZWmGPuN3Yt87d74+PTK7N8Rg6bXF1UMCo/fJricL9eaWlD0/y8hNfFECoJj
        CUwTDhU+xV8/Y3EeJjwLGE9JNDJIJZuB/B/4mSwcUtf+9mDabnT2DCTBeP5UDqjJveHkgfkr0BNMGDqM
        GWGmddo7WtW8glKfUnlVFZn+zyYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="tSbtnXoa.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEVSURBVDhPrVPBTgMhEOWiH1O9UeYqC/GmR/+q1drWg99i
        /Qr1Q3aXhnTVII8lK+wSU40veclkZt4MAwMbo72cnxstVkbTayvJgLDhQyymTeFuZqdG0UMt6dMLXIm1
        5B++0Aa5UdYjiPX8uSQqUtEuK4LOxcSfqGgdxJirP9p3cH91kScXfNC0lThD9/s0sL+WrrPW2e1y8MGG
        b1JYiVtmNH/LnJ52u3Bd1zn7uMnscZ5v/uILiHYS8AxdD4fA9DQ5eYMTNKXgUQUkr/9lhLvU+atL1LRg
        eIq/PmOjaBZ2AeuZBo+jWAUxEP/BrpxYYEVPjvOTKO8Ri6zH46SsNX9H54k4Be4EG4Yb7nfEE3ZFy2Hm
        AYx9AfbuI5U3qJGrAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="tSbtnLuu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIHSURBVDhPhZNba9RAFMdj8UGkPohubTKZ2e1aEVxtS6UI
        fgK/i+C1UbTqgDbJdHcferFlfRMU9LFP7rYIRfRNK7pJJqtuWxWq4oWioE9CPDM5qL1tf08z/3PmXBOj
        FWT2ygGr6jygs46F0tbYodfNpDdFpfuO1N0Va8ZJrOr5p2huDZXiDAvcL0wKnotHDlq1IWrWnEpmjrej
        /RKN/MvaeS0sEhdYIIJcVMqitI5sWOy0pXjOpH8NpZRc4PcS6X60Xw0TlDZFBVG+LPaPogTZpbgPFZzC
        64YUGqMDRpK0qTO0cRrauaMNxhzfTgLx3WyU96bCGuDRkcWJJwPvK0mhOVZWUudrN0MD94e2k5fChsEt
        6wugtkAjUc6EvD3fnOo43JxcVo/7Fm5+639bMdHNgHl9VYGg/GGTSPEJdRXgBLSUgMN078LkL/W4Z3G0
        nl3iO9BFo7aVf1HqUCVugwc/Wd3fjTbYiH9bBemOi78Lb8bvovyXNKm/YiRcz8RgoXcPVnNSXwDzGd8J
        Q7rBYnEcpVVAAuffEAESecdgkB/SklqTjf0cC8VnFrqHUEqB1Vy3A3++q+7uQ2kdNCjutyMRqy8WpdVA
        31ep9C6q855pZ5dVHbxlPRqiKptuCSb/f6ubw3mbNXNuXv9I8ENBe0tQ4QRrlLrQY2vsh2eJVRusscc8
        j9IGGMYfOwzithyayr0AAAAASUVORK5CYII=
</value>
  </data>
</root>